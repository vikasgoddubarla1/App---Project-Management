# Generated by Django 4.2.1 on 2024-07-31 21:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import locations.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('micro_page_image', models.FileField(blank=True, null=True, upload_to='magic_page_image', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), locations.models.validate_file_size])),
                ('address_line_1', models.CharField(blank=True, max_length=160, null=True)),
                ('address_line_2', models.CharField(blank=True, max_length=160, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('sales_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('sales_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('support_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('support_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operating_date', models.DateField(blank=True, null=True)),
                ('land_owner_asset_id', models.CharField(blank=True, max_length=100, null=True)),
                ('tenant_type', models.CharField(blank=True, max_length=55, null=True)),
                ('location_code', models.CharField(blank=True, max_length=155, null=True)),
                ('location_micropage', models.CharField(blank=True, max_length=155, null=True, unique=True)),
                ('location_state', models.CharField(blank=True, choices=[('renovation', 'RENOVATION'), ('sale', 'SALE')], max_length=100, null=True)),
                ('snowweight_load_factor', models.CharField(blank=True, choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=100, null=True)),
                ('estimated_completion_date', models.DateField(blank=True, null=True)),
                ('estimated_current_phase_end_date', models.DateField(blank=True, null=True)),
                ('location_image', models.FileField(blank=True, null=True, upload_to='location_image', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), locations.models.validate_file_size])),
                ('location_device_image', models.FileField(blank=True, null=True, upload_to='location_device_image', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), locations.models.validate_file_size])),
                ('channel_background_color', models.CharField(blank=True, max_length=255, null=True)),
                ('channel_text_color', models.CharField(blank=True, max_length=255, null=True)),
                ('current_phase', models.CharField(blank=True, max_length=100, null=True)),
                ('current_phase_status', models.CharField(blank=True, max_length=100, null=True)),
                ('location_status', models.CharField(choices=[('pipeline', 'PIPELINE'), ('projectmanagement', 'PROJECTMANAGEMENT'), ('operating', 'OPERATING')], default='pipeline', max_length=100)),
                ('location_latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('location_longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('prioritisation', models.BooleanField(default='False')),
                ('prioritisation_comments', models.TextField(blank=True, null=True)),
                ('state_start_date', models.DateField(blank=True, null=True)),
                ('state_end_date', models.DateField(blank=True, null=True)),
                ('state_comments', models.TextField(blank=True, null=True)),
                ('expected_kWp', models.CharField(blank=True, max_length=160, null=True)),
                ('estimated_pv_costs', models.CharField(blank=True, max_length=160, null=True)),
                ('LIS', models.JSONField(blank=True, null=True)),
                ('project_number', models.CharField(blank=True, max_length=100, null=True)),
                ('approval_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('milestone_date', models.DateField(blank=True, null=True)),
                ('disc_reason_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('planned_ac', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ac_speed', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ac_tech_setup', models.CharField(blank=True, max_length=100, null=True)),
                ('planned_dc', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dc_speed', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dc_tech_setup', models.CharField(blank=True, max_length=100, null=True)),
                ('planned_battery', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('battery_speed', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('battery_tech_setup', models.CharField(blank=True, max_length=100, null=True)),
                ('construction_year', models.IntegerField(blank=True, null=True)),
                ('construction_quarter', models.CharField(blank=True, max_length=100, null=True)),
                ('exp_installation_date', models.DateField(blank=True, max_length=100, null=True)),
                ('planned_installation_date', models.DateField(blank=True, null=True)),
                ('exp_operation_date', models.DateField(blank=True, null=True)),
                ('capex_spent_to_date', models.DateField(blank=True, null=True)),
                ('capex_total_expected', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('subsidy', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_management_comments', models.TextField(blank=True, null=True)),
                ('approval_cs', models.CharField(blank=True, max_length=100, null=True)),
                ('pitch_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('negotiations_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('LOI', models.CharField(blank=True, max_length=100, null=True)),
                ('setup_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('parking_spots', models.IntegerField(blank=True, null=True)),
                ('construction_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('installed_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('operating_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_number_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('project_cluster_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_management_comments_pv', models.TextField(blank=True, null=True)),
                ('pitch_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('negotiations_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('LOI_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('setup_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('construction_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('installed_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('operating_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_number_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('project_cluster_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('approval_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('milestone_date_pv', models.DateField(blank=True, null=True)),
                ('disc_reason_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('lease_partner_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('lease_partner_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('expected_kWp_pv', models.CharField(blank=True, max_length=160, null=True)),
                ('expected_spec_yield_pv', models.CharField(blank=True, max_length=160, null=True)),
                ('construction_year_pv', models.IntegerField(blank=True, null=True)),
                ('construction_quarter_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('exp_installation_date_pv', models.DateField(blank=True, max_length=100, null=True)),
                ('planned_installation_date_pv', models.DateField(blank=True, null=True)),
                ('exp_operation_date_pv', models.DateField(blank=True, null=True)),
                ('capex_spent_to_date_pv', models.DateField(blank=True, null=True)),
                ('capex_total_expected_pv', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('offtakers_pv', models.CharField(blank=True, max_length=100, null=True)),
                ('preffered_charge_client_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('geap_ev', models.CharField(blank=True, max_length=100, null=True)),
                ('gep_ev', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('cos_pv', models.CharField(blank=True, choices=[('applied', 'APPLIED'), ('approved', 'APPROVED')], max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LocationDeviceMalos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('malo_calculation_device_channel_id', models.CharField(blank=True, max_length=100, null=True)),
                ('malo_kpi_device_channel_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationDeviceSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_device_id', models.CharField(blank=True, max_length=100, null=True)),
                ('device_channel_id', models.CharField(blank=True, max_length=100, null=True)),
                ('x_point', models.CharField(blank=True, max_length=100, null=True)),
                ('y_point', models.CharField(blank=True, max_length=100, null=True)),
                ('formula', models.CharField(blank=True, max_length=255, null=True)),
                ('formula_condition', models.CharField(blank=True, max_length=255, null=True)),
                ('formula_condition_value', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationMalos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('malo_number', models.CharField(blank=True, max_length=155, null=True)),
                ('is_external', models.BooleanField(default=False)),
                ('energy_type', models.CharField(blank=True, choices=[('infeed', 'INFEED'), ('consumption', 'CONSUMPTION')], max_length=100, null=True)),
                ('date_column', models.CharField(blank=True, max_length=155, null=True)),
                ('time_column', models.CharField(blank=True, max_length=155, null=True)),
                ('value_column', models.CharField(blank=True, max_length=155, null=True)),
                ('values_from', models.CharField(blank=True, max_length=155, null=True)),
                ('values_to', models.CharField(blank=True, max_length=155, null=True)),
                ('notation', models.CharField(blank=True, max_length=155, null=True)),
                ('values_unit', models.CharField(blank=True, max_length=155, null=True)),
                ('values_unit_changed', models.CharField(blank=True, max_length=155, null=True)),
                ('date_representation', models.CharField(blank=True, max_length=155, null=True)),
                ('date_format', models.CharField(blank=True, max_length=155, null=True)),
            ],
            options={
                'verbose_name_plural': 'Locationmalos',
            },
        ),
        migrations.CreateModel(
            name='LocationMaloValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=55, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Locationmolovalues',
            },
        ),
        migrations.CreateModel(
            name='LocationMeasures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_channel_id', models.CharField(blank=True, max_length=100, null=True)),
                ('month_year', models.DateField(blank=True, null=True)),
                ('advance_payment', models.CharField(blank=True, max_length=100, null=True)),
                ('generated_energy', models.CharField(blank=True, max_length=100, null=True)),
                ('delivered_energy', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Locationmeasures',
            },
        ),
        migrations.CreateModel(
            name='LocationMeasureSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grid_op', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('capex', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('insurance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('billing', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('energy_meter', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('direct_marketing', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('roof_rent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'verbose_name_plural': 'Locationmeasuresettings',
            },
        ),
        migrations.CreateModel(
            name='LocationPartnerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LocationStatusEVPV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=160, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='ModulePanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=150)),
                ('module_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.module')),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_fixed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Status',
            },
        ),
        migrations.CreateModel(
            name='RolesPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modules_id', models.ManyToManyField(to='locations.module')),
                ('modules_panels_id', models.ManyToManyField(to='locations.modulepanel')),
                ('permissions_id', models.ManyToManyField(to='locations.permission')),
                ('roles_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.role')),
            ],
            options={
                'verbose_name_plural': 'Roles Permissions',
            },
        ),
        migrations.CreateModel(
            name='PVFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pv_file_url', models.FileField(null=True, upload_to='files/pvfiles/')),
                ('location_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.location')),
            ],
        ),
        migrations.CreateModel(
            name='LocationSubTenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('location_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.location')),
            ],
        ),
    ]
